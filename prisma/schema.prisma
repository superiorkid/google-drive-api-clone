// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id                 String              @id @default(cuid())
  username           String              @unique
  email              String              @unique
  password           String?
  role               Role                @default(USER)
  verifyAt           DateTime?           @map("verify_at")
  lastLoginAt        DateTime?           @map("last_login_at")
  refreshToken       String?             @map("refresh_token")
  createdAt          DateTime            @default(now()) @map("created_at")
  updatedAt          DateTime            @updatedAt() @map("updated_at")
  emailVerifications EmailVerification[]

  @@index([username, email, createdAt])
  @@map("users")
}

model EmailVerification {
  id        String    @default(cuid())
  token     String    @unique
  expiresAt DateTime  @map("expires_at")
  used      Boolean   @default(false)
  usedAt    DateTime? @map("used_at")
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@index([used, expiresAt, createdAt])
  @@map("email_verifications")
}
